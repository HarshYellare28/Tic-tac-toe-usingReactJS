{"version":3,"sources":["Components/Icon.js","App.js","index.js"],"names":["Icon","name","sizeOfIcon","size","className","NotDrawn","hasWon","itemArray","Array","fill","App","useState","isCross","setIsCross","winMessage","setWinMessage","changeItem","itemNumber","toast","forEach","icon","Container","toastStyle","color","backgroundColor","autoClose","position","Row","Col","md","map","item","index","Card","onClick","CardBody","Button","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c24b4d7.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {FaTimes,FaPen,FaRegCircle} from \"react-icons/fa\"\r\nconst Icon = ({name,sizeOfIcon=\"50\"}) => {\r\n    switch(name)\r\n    {\r\n        case 'circle':\r\n            return <FaRegCircle size={sizeOfIcon} className=\"icons\"/>\r\n        case 'cross':\r\n            return <FaTimes size={sizeOfIcon} className=\"icons\"/>\r\n        default :\r\n            return <FaPen size={sizeOfIcon} className=\"icons\"/>    \r\n    }\r\n}\r\nexport default Icon","import React,{useState} from \"react\"\nimport Icon from \"./Components/Icon\"\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {Card,CardBody,Container,Button,Col,Row} from \"reactstrap\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nvar NotDrawn = false;\nvar hasWon = false;\nconst itemArray = new Array(9).fill(\"empty\");\nconst App = () => {\n  const [isCross,setIsCross] = useState(false)\n  const [winMessage,setWinMessage] = useState(\"\")\n\n  const reloadGame = () => {\n    setIsCross(false)\n    setWinMessage(\"\")\n    NotDrawn = true;\n    hasWon = false;\n    itemArray.fill(\"empty\",0,9);\n  }\n\n  const checkIsWinner = () => {\n    if(itemArray[0] !== \"empty\" && itemArray[0] === itemArray[1] && itemArray[0] === itemArray[2])\n    {\n      hasWon = true;\n      setWinMessage(`${itemArray[0]} won !`)\n    }\n    else if(itemArray[3] !== \"empty\" && itemArray[3] === itemArray[4] && itemArray[3] === itemArray[5])\n    {\n      hasWon = true;\n      setWinMessage(`${itemArray[3]} won !`)\n    }\n    else if(itemArray[6] !== \"empty\" && itemArray[6] === itemArray[7] && itemArray[6] === itemArray[8])\n    {\n      hasWon = true;\n      setWinMessage(`${itemArray[6]} won !`)\n    }\n    else if(itemArray[0] !== \"empty\" && itemArray[0] === itemArray[3] && itemArray[0] === itemArray[6])\n    {\n      hasWon = true;\n      setWinMessage(`${itemArray[0]} won !`)\n    }\n    else if(itemArray[1] !== \"empty\" && itemArray[1] === itemArray[4] && itemArray[1] === itemArray[7])\n    {\n      hasWon = true;\n      setWinMessage(`${itemArray[1]} won !`)\n    }\n    else if(itemArray[2] !== \"empty\" && itemArray[2] === itemArray[5] && itemArray[2] === itemArray[8])\n    {\n      hasWon = true;\n      setWinMessage(`${itemArray[2]} won !`)\n    }\n    else if(itemArray[0] !== \"empty\" && itemArray[0] === itemArray[4] && itemArray[0] === itemArray[8])\n    {\n      hasWon = true;\n      setWinMessage(`${itemArray[0]} won !`)\n    }\n    else if(itemArray[2] !== \"empty\" && itemArray[2] === itemArray[4] && itemArray[2] === itemArray[6])\n    {\n      hasWon = true;\n      setWinMessage(`${itemArray[2]} won !`)\n    }\n  }\n  \n  const checkIsDrawn = () => {\n    if(hasWon==false)\n    {\n      itemArray.forEach((icon) => {\n          if(icon===\"empty\")\n          {\n            NotDrawn = true;\n          }\n        })\n        if(NotDrawn === false)\n        {\n          setWinMessage(`Game Drawn !`)\n        }\n        NotDrawn = false;\n      }\n    }\n    \n\n  const changeItem = itemNumber => {\n    if(winMessage)\n    {\n      return toast(winMessage)\n    }\n    if(itemArray[itemNumber] === \"empty\")\n    {\n      itemArray[itemNumber] = isCross?\"cross\":\"circle\"\n      setIsCross(!isCross);//setting isCross state back to false once changed the item\n    }\n    else\n    {\n      return toast(\"Already filled\")\n    }\n    checkIsWinner();\n    checkIsDrawn();\n  }\n\n  return (\n    <div className=\"Container\">\n      <Container  className=\"text-center display-4 mt-5\">\n          <h1 className=\"heading\">Tic-Tac-Toe</h1>       \n      </Container>    \n      <Container className = \"p-4\">\n        <ToastContainer toastStyle={{ color:\"#CAD5E2\", backgroundColor: \"#03203C\",}} autoClose={1000} position=\"bottom-center\"/>\n        <Row>\n          <Col md ={6} className = \"offset-md-3\"> \n            <div className=\"grid\"> \n              {itemArray.map((item,index)=> (\n                <Card onClick={() => changeItem(index)}>\n                  <CardBody className=\"box\">\n                    <Icon name={item}/>\n                  </CardBody>\n                </Card>\n              ))}\n            </div>\n            <div className=\"text-below-grid\">\n              {winMessage ? (\n                <div className=\"mb-2 mt-1\">\n                  <h1 className=\"winMessageClass text-uppercase text-center\">\n                    {winMessage}\n                  </h1>\n                  <div className=\"text-center\">\n                    <Button className=\"buttonClass\" onClick={reloadGame}>\n                      Reload Game\n                    </Button>\n                  </div>\n                </div>\n              ) : (\n                <h1 className = \"text-center turnTeller\">\n                  {isCross? \"Cross's\" : \"Circle's\"} turn\n                </h1>\n              )}\n            </div>            \n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}